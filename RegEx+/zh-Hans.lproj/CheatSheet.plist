<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>metacharacters</key>
	<array>
		<dict>
			<key>exp</key>
			<string>\a</string>
			<key>des</key>
			<string>匹配一个警报声, \u0007</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\A</string>
			<key>des</key>
			<string>匹配输入的开端。和 ^ 不同的是，\A 不会匹配换行后的开端。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\b, 在 [集合] 外</string>
			<key>des</key>
			<string>当前位置是词语边界时匹配。词语边界是指词语 (\w) 和非词语 (\W) 字符之间的界限，这种边界会忽略连字符。为了更好地使用词语边界，请打开『使用 unicode 词语边界』选项。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\b, 在 [集合] 内</string>
			<key>des</key>
			<string>匹配一个退格, \u0008.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\B</string>
			<key>des</key>
			<string>当前位置不是词语边界时匹配。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\cX</string>
			<key>des</key>
			<string>匹配一个 control-X 字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\d</string>
			<key>des</key>
			<string>匹配任何符合 Unicode 通用类别的数字字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\D</string>
			<key>des</key>
			<string>匹配任何不为数字的字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\e</string>
			<key>des</key>
			<string>匹配一个 ESCAPE, \u001B。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\E</string>
			<key>des</key>
			<string>终止一个 \Q ... \E 元字符引用序列。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\f</string>
			<key>des</key>
			<string>匹配换页符, \u000C。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\G</string>
			<key>des</key>
			<string>当前位置是上一个匹配的结束位置时匹配。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\n</string>
			<key>des</key>
			<string>匹配一个换行符, \u000A。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\N{UNICODE CHARACTER NAME}</string>
			<key>des</key>
			<string>匹配 Unicode 命名字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\p{UNICODE PROPERTY NAME}</string>
			<key>des</key>
			<string>匹配任意有指定 Unicode 属性的字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\P{UNICODE PROPERTY NAME}</string>
			<key>des</key>
			<string>匹配任意不包括指定 Unicode 属性的字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\Q</string>
			<key>des</key>
			<string>开始元字符引用序列，直到遇到 \E。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\r</string>
			<key>des</key>
			<string>匹配一个 &lt;CR&gt; 回车, \u000D.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\s</string>
			<key>des</key>
			<string>匹配一个空白字符，它的定义是 [\t\n\f\r\p{Z}]。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\S</string>
			<key>des</key>
			<string>匹配一个非空白字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\t</string>
			<key>des</key>
			<string>匹配一个横向 TAB 缩进，\u0009。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\uhhhh</string>
			<key>des</key>
			<string>匹配 hex 值为 hhhh 的字符串。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\Uhhhhhhhh</string>
			<key>des</key>
			<string>匹配 hex 值为 hhhhhhhh 的字符串。尽管最大的 Unicode 值是 \U0010ffff，但还是要提供完整的八个十六进制数字。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\w</string>
			<key>des</key>
			<string>匹配一个词语字符，它的字符定义是 [\p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Nd}]。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\W</string>
			<key>des</key>
			<string>匹配一个非词语字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\x{hhhh}</string>
			<key>des</key>
			<string>匹配 hex 值为 hhhh 的字符串，可以是一到六位的十六进制数字。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\xhh</string>
			<key>des</key>
			<string>匹配 hex 值为 hh 的两位十六进制数字对应的字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\X</string>
			<key>des</key>
			<string>Match a Grapheme Cluster.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\Z</string>
			<key>des</key>
			<string>当前位置是输入的结尾时匹配，但仅匹配到行尾标识前，如果有的话。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\z</string>
			<key>des</key>
			<string>当前位置是输入的结尾时匹配。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\n</string>
			<key>des</key>
			<string>换行引用。无论第 n 个捕获组匹配到什么，n 必须是一个 ≥ 1 并 ≤ 总捕获数的数字。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\0ooo</string>
			<key>des</key>
			<string>Match an Octal character. ooo is from one to three octal digits. 0377 is the largest allowed Octal character. The leading zero is required; it distinguishes Octal constants from back references.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>[pattern]</string>
			<key>des</key>
			<string>匹配任何在这个方括号内的字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>.</string>
			<key>des</key>
			<string>匹配所有字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>^</string>
			<key>des</key>
			<string>匹配行首。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>$</string>
			<key>des</key>
			<string>匹配行尾。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>\</string>
			<key>des</key>
			<string>转义后续字符。有些字符必须转义后才能被当成字面量使用，如 * ? + [ ( ) { } ^ $ | \ . /</string>
		</dict>
	</array>
	<key>operators</key>
	<array>
		<dict>
			<key>exp</key>
			<string>|</string>
			<key>des</key>
			<string>可选匹配。A|B 表示是 A 或者是 B 的一个字符。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>*</string>
			<key>des</key>
			<string>匹配零次或多次，优先匹配多次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>+</string>
			<key>des</key>
			<string>匹配一次或多次，优先匹配多次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>?</string>
			<key>des</key>
			<string>匹配零到一次，优先匹配一次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n}</string>
			<key>des</key>
			<string>明确匹配 n 次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n,}</string>
			<key>des</key>
			<string>匹配最少 n 次，最多无限次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n,m}</string>
			<key>des</key>
			<string>匹配 n 到 m 次，优先匹配尽可能多的次数，但不会超过 m 次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>*?</string>
			<key>des</key>
			<string>匹配零次或多次，尽可能少匹配。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>+?</string>
			<key>des</key>
			<string>匹配一次或多次，尽可能少匹配。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>??</string>
			<key>des</key>
			<string>匹配零次或一次，尽可能少匹配。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n}?</string>
			<key>des</key>
			<string>明确匹配 n 次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n,}?</string>
			<key>des</key>
			<string>Match at least n times, but no more than required for an overall pattern match.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n,m}?</string>
			<key>des</key>
			<string>匹配 n 到 m 次，尽可能少匹配，但不少于 n 次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>*+</string>
			<key>des</key>
			<string>Match 0 or more times. Match as many times as possible when first encountered, do not retry with fewer even if overall match fails (Possessive Match).</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>++</string>
			<key>des</key>
			<string>Match 1 or more times. Possessive match.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>?+</string>
			<key>des</key>
			<string>Match zero or one times. Possessive match.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n}+</string>
			<key>des</key>
			<string>明确匹配 n 次。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n,}+</string>
			<key>des</key>
			<string>Match at least n times. Possessive Match.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>{n,m}+</string>
			<key>des</key>
			<string>Match between n and m times. Possessive Match.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(...)</string>
			<key>des</key>
			<string>圆括号匹配。整个表达式匹配结束后，圆括号内的子表达式所捕获到的区域能从匹配信息中单独获得。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?:...)</string>
			<key>des</key>
			<string>非捕获圆括号。匹配括号内冒号之后的表达式但不做捕获，无法从匹配信息中获得，某些时候比捕获圆括号更加高效。</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?&gt;...)</string>
			<key>des</key>
			<string>Atomic-match parentheses. First match of the parenthesized subexpression is the only one tried; if it does not lead to an overall pattern match, back up the search for a match to a position before the &quot;(?&gt;&quot;</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?# ... )</string>
			<key>des</key>
			<string>自由格式的注释 (?# 注释 ).</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?= ... )</string>
			<key>des</key>
			<string>Look-ahead assertion. True if the parenthesized pattern matches at the current input position, but does not advance the input position.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?! ... )</string>
			<key>des</key>
			<string>Negative look-ahead assertion. True if the parenthesized pattern does not match at the current input position. Does not advance the input position.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?&lt;= ... )</string>
			<key>des</key>
			<string>Look-behind assertion. True if the parenthesized pattern matches text preceding the current input position, with the last character of the match being the input character just before the current position. Does not alter the input position. The length of possible strings matched by the look-behind pattern must not be unbounded (no * or + operators.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?&lt;! ... )</string>
			<key>des</key>
			<string>Negative Look-behind assertion. True if the parenthesized pattern does not match text preceding the current input position, with the last character of the match being the input character just before the current position. Does not alter the input position. The length of possible strings matched by the look-behind pattern must not be unbounded (no * or + operators.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?ismwx-ismwx: ... )</string>
			<key>des</key>
			<string>Flag settings. Evaluate the parenthesized expression with the specified flags enabled or -disabled. The flags are defined in Flag Options.</string>
		</dict>
		<dict>
			<key>exp</key>
			<string>(?ismwx-ismwx)</string>
			<key>des</key>
			<string>Flag settings. Change the flag settings. Changes apply to the portion of the pattern following the setting. For example, (?i) changes to a case insensitive match.The flags are defined in Flag Options.</string>
		</dict>
	</array>
</dict>
</plist>
